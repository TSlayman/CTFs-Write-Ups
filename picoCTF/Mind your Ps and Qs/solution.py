from Crypto.Util.number import inverse

c = 62324783949134119159408816513334912534343517300880137691662780895409992760262021
n = 1280678415822214057864524798453297819181910621573945477544758171055968245116423923
e = 65537

p = 1899107986527483535344517113948531328331
q = 674357869540600933870145899564746495319033

phi = (p - 1) * (q - 1)

# Calculate the modular inverse of (e, phi)
d = inverse(e, phi)

# (c ^ d) % n
m = pow(c, d, n)

print(bytes.fromhex(hex(m)[2:]).decode('utf-8'))
